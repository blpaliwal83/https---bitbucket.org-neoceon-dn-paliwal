/*
 * File: app/view/ChangEmail.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */
Ext.define('DNB.view.ChangEmail', {
    extend: 'Ext.Container',
    alias: 'widget.changemail',
    requires: ['Ext.field.Email', 'Ext.Button', 'Ext.Toolbar', 'Ext.Spacer'],
    config: {
        centered: true,
        id: 'ChangEmail',
        modal: true,
        style: 'width:80%;',
        items: [{
            xtype: 'panel',
            padding: 20,
            style: 'background-color:#32AFE7;border-radius:5px;',
            items: [{
                xtype: 'panel',
                height: 40,
                html: '<div class="feedheading"> Change Email </div>'
            }, {
                cls: 'roundfeedfiled',
                margin: '10 0 0 0',
                style: 'border-radius:10px;',
                xtype: 'emailfield',
                id: 'UserNewEmailAddress',
                clearIcon: false,
                placeHolder: 'email@example.com'
            }, {
                xtype: 'button',
                height: 40,
                margin: '10 auto',
                style: 'background-color:white;color:#32AFE7;',
                ui: 'plain',
                width: 120,
                cls : 'ChangeEmailAddressCls',
                itemId: 'ChangeEmailAddress',
                ui: 'plain',
                text: 'Submit'
            }]
        }, {
            xtype: 'toolbar',
            docked: 'top',
            cls: 'transparentBG',
            // title: 'Change Email',
            items: [{
                xtype: 'button',
                hidden: true,
                itemId: 'Back',
                ui: 'plain',
                iconCls: 'previousArrowIcon',
                text: 'Back'
            }, {
                xtype: 'spacer'
            }, {
                xtype: 'button',
                html: '<div><img width="32" src="resources/images/feedbackclose.png"></div>',
                // html: '<div><img src="resources/images/CloseBlueIcon.JPG"></div>',
                itemId: 'CloseChangeEmail',
                margin: '0 -5 0 0',
                ui: 'plain',
                iconAlign: 'right'
            }]
        }],
        listeners: [{
            fn: 'onChangeEmailAddressTap',
            event: 'tap',
            delegate: '#ChangeEmailAddress'
        }, {
            fn: 'onBackTap',
            event: 'tap',
            delegate: '#Back'
        }, {
            fn: 'onCloseChangeEmailTap',
            event: 'tap',
            delegate: '#CloseChangeEmail'
        }]
    },
    onChangeEmailAddressTap: function(button, e, eOpts) {
        var email = Ext.getCmp('UserNewEmailAddress').getValue();
        var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        var checkemail = filter.test(email);
        if (email == '') {
            Ext.Msg.alert('', 'Email is mandatory!');
        } else if (!checkemail) {
            Ext.Msg.alert('', 'Invalid Email!');
        } else {
            Ext.Ajax.request({
                url: DNB.util.Common.api.updateUserEmail,
                method: 'POST',
                params: {
                    email: email,
                    id: localStorage.getItem('userid')
                },
                success: function(res, options) {
                    console.log('success:' + res.responseText);
                    var res = Ext.decode(res.responseText).Result;
                    alert('', res.message);
                    if (res.status) {
                        Ext.getCmp('ChangEmail').hide();
                        localStorage.setItem('email', email);
                        Ext.getCmp('Account').show();
                    }
                },
                failure: function(res, options) {
                    alert('', 'failure' + res.responseText);
                }
            });
        }
    },
    onBackTap: function(button, e, eOpts) {
        Ext.getCmp('ChangEmail').hide();
        Ext.getCmp('Account').show();
    },
    onCloseChangeEmailTap: function(button, e, eOpts) {
        Ext.getCmp('ChangEmail').hide();
    }
});
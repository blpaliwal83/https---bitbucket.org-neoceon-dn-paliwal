/*
 * File: app/view/AddEvent.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DNB.view.AddEvent', {
    extend: 'Ext.Container',
    alias: 'widget.addevent',

    requires: [
        'Ext.Img',
        'Ext.dataview.DataView',
        'Ext.XTemplate',
        'Ext.field.DatePicker',
        'Ext.picker.Date',
        'Ext.Button',
        'Ext.Label',
        'Ext.field.Toggle',
        'Ext.field.Number',
        'Ext.field.Email',
        'Ext.field.TextArea',
        'Ext.Toolbar',
        'Ext.Spacer'
    ],

    config: {
        id: 'AddEvent',
        scrollable: 'vertical',
        style:'background:white;',
        items: [
            {
                xtype: 'image',
                height: 300,
                // cls : 'add-image',
                id: 'EventImageOnEventPage',
                name: 'eventImageOnEventPage',
                itemId: 'myimg9',
                margin: 0,
                src: 'resources/images/addimage.PNG'
            },
            {
                xtype: 'textfield',
                cls: 'default-label-class default-botom-border default-top-border',
                id: 'EventNameOnEventPage',
                // padding: '0 0 0 0',
                // style: '    border-bottom:1px solid rgba(212, 212, 212, 0.48) !important;',
                clearIcon: false,
                label: 'Notice Name',
                labelWidth: '35%'
                // ,
                // listeners: {
                //     focus: function(comp, e, eopts) {
                //         var ost = comp.element.dom.offsetTop;
                //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                //     }
                // }
            },
            
            {
                
                html: '<div class="x-container x-field-text x-field x-label-align-left x-field-labeled default-label-class default-botom-border x-form-label-nowrap x-empty" id="EventLocationOnEventPage" style="border-bottom:1px solid rgba(212, 212, 212, 0.48) !important;">'+
                            '<div class="x-form-label" id="" style="width: 35% !important;">'+
                                '<span id="ext-element-651">Location</span>'+
                            '</div>'+
                            '<div class="x-component-outer" id="" style="padding: 0px !important;">'+
                                '<div class="x-unsized x-field-input" id="ext-input-8">'+
                                    '<input class="x-input-el x-form-field x-input-text" type="text" id="locationField" name="locationPoint" placeholder="">'+
                                    '<div class="x-field-mask" style="display: none !important;" id=""></div>'+
                                    '<div class="x-clear-icon" id=""></div>'+
                                '</div>'+
                            '</div>'+
                        '</div>',
                
                autoComplete: true
            },


            {
                xtype: 'dataview',
                height: 50,
                hidden: true,
                itemId: 'FreeLocationsList',
                name: 'freeLocationsList',
                margin: '0 0 0 30%',
                width: '50%',
                scrollable: 'vertical',
                itemTpl: [
                    '<div>{address}</div>'
                ]
            },
            {
                xtype: 'textfield',
                cls: 'default-label-class default-botom-border',
                id: 'EventLocationCityOnEventPage',
                // padding: '0 0 0 0',
                // style: 'border-bottom:1px solid rgba(212, 212, 212, 0.48) !important;',
                clearIcon: false,
                label: 'City',
                labelWidth: '35%'
                // ,
                // listeners: {
                //     focus: function(comp, e, eopts) {
                //         var ost = comp.element.dom.offsetTop;
                //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                //     }
                // }
            },
            {
                xtype: 'textfield',
                cls: 'default-label-class default-botom-border',
                id: 'EventLocationStateOnEventPage',
                // padding: '0 0 0 0',
                // style: 'border-bottom:1px solid rgba(212, 212, 212, 0.48) !important;',
                clearIcon: false,
                label: 'State',
                labelWidth: '35%'
                // ,
                // listeners: {
                //     focus: function(comp, e, eopts) {
                //         var ost = comp.element.dom.offsetTop;
                //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                //     }
                // }
            },
            {
                xtype: 'textfield',
                cls: 'default-label-class default-botom-border',
                hidden: true,
                id: 'EventLocationCountryOnEventPage',
                // padding: '0 0 0 0',
                // style: 'border-bottom:1px solid rgba(212, 212, 212, 0.48) !important;',
                clearIcon: false,
                label: 'Country',
                labelWidth: '35%'
            },
            {
                xtype: 'textfield',
                cls: 'default-label-class default-botom-border',
                id: 'EventLocationZipOnEventPage',
                // padding: '0 0 0 0',
                // style: 'border-bottom:1px solid #cccccc;',
                clearIcon: false,
                label: 'Zip',
                labelWidth: '35%'
                // ,
                // listeners: {
                //     focus: function(comp, e, eopts) {
                //         var ost = comp.element.dom.offsetTop;
                //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                //     }
                // }
            },
            {
                xtype: 'datepickerfield',
                id: 'EventStartDate',
                // style: 'border-bottom:1px solid #cccccc;',
                // padding: '0 10 0 0',
                label: 'Start Date',
                cls : 'default-label-class default-botom-border',
                padding: '0 10 0 0',
                labelCls: 'default-label-class',
                // cls : 'default-label-class',
                labelWidth: '60%',
                placeHolder: 'mm/dd/yyyy',
                picker: {
                    doneButton: {
                        ui: 'plain'
                    },
                    cancelButton: {
                        ui: 'plain'
                    }
                }
            },
            {
                xtype: 'datepickerfield',
                id: 'EventEndDate',
                // style: 'border-bottom:1px solid #cccccc;',
                label: 'End Date',
                cls : 'default-label-class default-botom-border',
                padding: '0 10 0 0',
                labelCls: 'default-label-class',
                labelWidth: '60%',
                placeHolder: 'mm/dd/yyyy',
                picker: {
                    doneButton: {
                        ui: 'plain'
                    },
                    cancelButton: {
                        ui: 'plain'
                    }
                }
            },
            {
                xtype: 'panel',
                itemId: 'StartTime',
                cls : 'default-label-class aMpM default-botom-border',
                // style: 'border-bottom:1px solid #cfcfcf;',
                layout: 'hbox',
                items: [
                    {
                        xtype: 'selectfield',
                        flex: 3,
                        id: 'EventStartTimeHour',
                        defaultPhonePickerConfig:{
                            doneButton: {
                                ui:'plain'
                            },
                            cancelButton: {
                                ui: 'plain'
                            }
                        },
                        style: 'color:gray;',
                        labelCls: 'default-label-class',
                        label: 'Time From',
                        labelWidth: '60%',
                        options: [
                            {
                                text: 'HH',
                                value: 'H'
                            },
                            {
                                text: '1',
                                value: 1
                            },
                            {
                                text: '2',
                                value: 2
                            },
                            {
                                text: '3',
                                value: 3
                            },
                            {
                                text: '4',
                                value: 4
                            },
                            {
                                text: '5',
                                value: 5
                            },
                            {
                                text: '6',
                                value: 6
                            },
                            {
                                text: '7',
                                value: 7
                            },
                            {
                                text: '8',
                                value: 8
                            },
                            {
                                text: '9',
                                value: 9
                            },
                            {
                                text: '10',
                                value: 10
                            },
                            {
                                text: '11',
                                value: 11
                            },
                            {
                                text: '12',
                                value: 12
                            }
                        ]
                    },
                    {
                        xtype: 'selectfield',
                        flex: 1,
                        id: 'EventStartTimeMinute',
                        defaultPhonePickerConfig:{
                            doneButton: {
                                ui:'plain'
                            },
                            cancelButton: {
                                ui: 'plain'
                            }
                        },
                        options: [
                            {
                                text: 'MM',
                                value: 'M'
                            },
                            {
                                text: '00',
                                value: 00
                            },
                            {
                                text: '05',
                                value: 5
                            },
                            {
                                text: '10',
                                value: 10
                            },
                            {
                                text: '15',
                                value: 15
                            },
                            {
                                text: '20',
                                value: 20
                            },
                            {
                                text: '25',
                                value: 25
                            },
                            {
                                text: '30',
                                value: 30
                            },
                            {
                                text: '35',
                                value: 35
                            },
                            {
                                text: '40',
                                value: 40
                            },
                            {
                                text: '45',
                                value: 45
                            },
                            {
                                text: '50',
                                value: 50
                            },
                            {
                                text: '55',
                                value: 55
                            }
                        ]
                    },
                    {
                        xtype: 'selectfield',
                        flex: 1,
                        id: 'EventStartTimeAMPM',
                        defaultPhonePickerConfig:{
                            doneButton: {
                                ui:'plain'
                            },
                            cancelButton: {
                                ui: 'plain'
                            }
                        },
                        options: [
                            {
                                text: 'AM',
                                value: 'AM'
                            },
                            {
                                text: 'PM',
                                value: 'PM'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'panel',
                itemId: 'EndTime',
                cls : 'default-label-class aMpM default-botom-border',
                // style: 'border-bottom:1px solid #cfcfcf;',
                layout: 'hbox',

                items: [
                    {
                        xtype: 'selectfield',
                        flex: 3,
                        id: 'EventEndTimeHour',
                        label: 'Time To',
                        labelWidth: '60%',
                        defaultPhonePickerConfig:{
                            doneButton: {
                                ui:'plain'
                            },
                            cancelButton: {
                                ui: 'plain'
                            }
                        },
                        options: [
                            {
                                text: 'HH',
                                value: 'H'
                            },
                            {
                                text: '1',
                                value: 1
                            },
                            {
                                text: '2',
                                value: 2
                            },
                            {
                                text: '3',
                                value: 3
                            },
                            {
                                text: '4',
                                value: 4
                            },
                            {
                                text: '5',
                                value: 5
                            },
                            {
                                text: '6',
                                value: 6
                            },
                            {
                                text: '7',
                                value: 7
                            },
                            {
                                text: '8',
                                value: 8
                            },
                            {
                                text: '9',
                                value: 9
                            },
                            {
                                text: '10',
                                value: 10
                            },
                            {
                                text: '11',
                                value: 11
                            },
                            {
                                text: '12',
                                value: 12
                            }
                        ]
                    },
                    {
                        xtype: 'selectfield',
                        flex: 1,
                        id: 'EventEndTimeMinute',
                        defaultPhonePickerConfig:{
                            doneButton: {
                                ui:'plain'
                            },
                            cancelButton: {
                                ui: 'plain'
                            }
                        },
                        options: [
                            {
                                text: 'MM',
                                value: 'M'
                            },
                            {
                                text: '00',
                                value: 0
                            },
                            {
                                text: '05',
                                value: 5
                            },
                            {
                                text: '10',
                                value: 10
                            },
                            {
                                text: '15',
                                value: 15
                            },
                            {
                                text: '20',
                                value: 20
                            },
                            {
                                text: '25',
                                value: 25
                            },
                            {
                                text: '30',
                                value: 30
                            },
                            {
                                text: '35',
                                value: 35
                            },
                            {
                                text: '40',
                                value: 40
                            },
                            {
                                text: '45',
                                value: 45
                            },
                            {
                                text: '50',
                                value: 50
                            },
                            {
                                text: '55',
                                value: 55
                            }
                        ]
                    },
                    {
                        xtype: 'selectfield',
                        flex: 1,
                        id: 'EventEndTimeAMPM',
                        defaultPhonePickerConfig:{
                            doneButton: {
                                ui:'plain'
                            },
                            cancelButton: {
                                ui: 'plain'
                            }
                        },
                        options: [
                            {
                                text: 'AM',
                                value: 'AM'
                            },
                            {
                                text: 'PM',
                                value: 'PM'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'panel',
                cls : 'default-label-class default-botom-border addEventVideoLinkPanelCls',
                itemId: 'VideoLinkPanel',
                // style: 'background-color:white;border-bottom:1px solid #cccccc;',
                layout: 'hbox',
                items: [
                    // {
                    //     xtype: 'label',
                    //     flex: 1,
                    //     hidden: true,
                    //     html: 'Video Link',
                    //     // padding: '5 0 0 12'

                    // },
                    // {
                    //     xtype: 'button',
                    //     height: 45,
                    //     hidden: true,
                    //     html: '<img width="32px" height="32px" src="resources/images/add1.png">',
                    //     itemId: 'UploadNoticeVideo',
                    //     name: 'uploadNoticeVideo',
                    //     padding: '5 2 2 2',
                    //     style: 'background-color:white',
                    //     ui: 'plain'
                    // },
                    {
                        xtype: 'textfield',
                        flex: 1,
                        id: 'VideoLinkUrls',
                        padding: '0 0 0 0',
                        clearIcon: false,
                        label: 'Video Link',
                        // cls: 'default-label-class',
                        placeHolder: '',
                        labelWidth: '35%'
                        // ,
                        // listeners: {
                        //     focus: function(comp, e, eopts) {
                        //         var ost = comp.element.dom.offsetTop;
                        //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                        //     }
                        // }

                    }
                ]
            },
            {
                xtype: 'panel',
                cls : 'default-label-class default-botom-border addEventAudioLinkPanelCls',
                itemId: 'AudioPanel',
                // padding: '0 7 0 0',
                // style: 'background-color:white;border-bottom:1px solid #cccccc;',
                layout: 'hbox',
                items: [
                    {
                        xtype: 'label',
                        flex: 1,
                        html: 'Audio Clip'
                    },
                    {
                        xtype: 'button',
                        height: 45,
                        html: '<img width="32px" height="32px" src="resources/images/plus-icon.png">',
                        itemId: 'UploadNoticeAudio',
                        name: 'uploadNoticeAudio',
                        padding: '5 2 2 2',
                        style: 'background-color:white',
                        ui: 'plain'
                    }
                ]
            },
            {
                xtype: 'panel',
                height: 50,
                hidden: true,
                cls : 'default-label-class',
                id: 'NoticeImageListPanel',
                layout: 'hbox',
                scrollable: 'horizontal',
                items: [
                    {
                        xtype: 'image',
                        height: 50,
                        width: 50
                    },
                    {
                        xtype: 'image',
                        height: 50,
                        width: 50
                    },
                    {
                        xtype: 'image',
                        height: 50,
                        width: 50
                    }
                ]
            },
            {
                xtype: 'panel',
                height: 150,
                cls : 'default-label-class default-botom-border',
                id: 'NoticeImagPanel',
                itemId: 'ImagePanel',
                // padding: '0 7 0 0',
                // style: 'background-color:white;border-bottom:1px solid;',
                layout: 'vbox',
                items: [
                    {
                        xtype: 'panel',
                        layout: 'hbox',
                        items: [
                            {
                                xtype: 'label',
                                flex: 1,
                                html: 'Pictures'
                            },
                            {
                                xtype: 'button',
                                height: 45,
                                html: '<img width="32px" height="32px" src="resources/images/plus-icon.png">',
                                itemId: 'UploadNoticeImage',
                                name: 'uploadNoticeImage',
                                padding: '5 2 2 2',
                                style: 'background-color:white',
                                ui: 'plain'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        flex: 1,
                        height: 100,
                        hidden: false,
                        id: 'EventImagesListPanel',
                        padding: 5,
                        layout: 'fit',
                        items: [
                            {
                                xtype: 'dataview',
                                hidden: false,
                                itemId: 'MyNoticeMediaDataView',
                                name: 'myNoticeMediaDataView',
                                margin: '5 0 0 0',
                                style: 'background-color:white;',
                                scrollable: 'horizontal',
                                inline: {
                                    wrap: false
                                },
                                itemTpl: Ext.create('Ext.XTemplate', 
                                    '<table width="100px" style="margin-left:10px;padding:10px;">',
                                    '    <tr><td style="margin-top:5px;border:1px solid YELLOW;">',
                                    '<div style="float:left;"> <img class="NoticaMedia" src=\"{[this.GetImageUrl(values.url)]}\" onerror=DNB.app.getController(\"Events\").GetNoImageUrl(this)>',
                                    '    </div>',
                                    '    <div class="deleteMedia deleteMediaDiv" style="float:left;">',
                                    '            <img style="width:32px;height:32px;" class="deleteMedia" ',
                                    '                 src="resources/images/delete.JPG">',
                                    '        </div>',
                                    '        </td></tr>',
                                    '    <tr></tr>',
                                    '</table>        ',
                                    '',
                                    {
                                        GetImageUrl: function(imageUrl) {
                                            if(isEditNotice){
                                                return imageBaseUrl+imageUrl;
                                            }else{
                                                return imageUrl;
                                            }
                                        },
                                        isNoticeLike: function(isLike) {
                                            if(isLike=='yes'){
                                                return 'resources/images/liked.PNG';
                                            }else{
                                                return 'resources/images/like.png';
                                            }
                                        },
                                        GetLocation: function(location) {
                                            if(location!=null && location.length>10){
                                                return location.substr(0,10);
                                            }else{
                                                return location;
                                            }
                                        }
                                    }
                                ),
                                store: 'NoticeMediaStore'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'panel',
                itemId: 'CategoryPanel',
                // padding: '0 7 0 0',
                cls : 'default-label-class default-botom-border addEventCategoryPanelCls',
                // style: 'background-color:white;border-bottom:1px solid #cccccc;',
                layout: 'hbox',
                items: [
                    {
                        xtype: 'label',
                        flex: 1,
                        html: 'Category'
                    },
                    {
                        xtype: 'button',
                        height: 45,
                        html: '<img width="32px" height="32px" src="resources/images/plus-icon.png">',
                        id: 'EventCategoryButton',
                        name: 'eventCategoryButton',
                        itemId: 'SelectCategory',
                        padding: '5 2 2 2',
                        style: 'background-color:white',
                        ui: 'plain'
                    }
                ]
            },
            {
                xtype: 'selectfield',
                id: 'PayStatus',
                cls: 'default-label-class default-botom-border default-label-classBackGround',
                // style: 'border-bottom:1px solid #cfcfcf;',
                label: 'Pay Status',
                // padding: '0 10 0 0',
                labelWidth: '70%',
                defaultPhonePickerConfig:{
                            doneButton: {
                                ui:'plain'
                            },
                            cancelButton: {
                                ui: 'plain'
                            }
                        },
                placeHolder: '',
                options: [
                    {
                        value: 'free',
                        text: 'Free'
                    },
                    {
                        value: 'paid',
                        text: 'Payment'
                    }
                ]
            },
            {
                xtype: 'togglefield',
                id: 'EventHotFive',
                name : 'eventHotFiveToggle',
                // padding: 5,
                cls: 'default-label-class default-botom-border default-toggle-field-cls',
                // style: 'border-bottom:1px solid;',
                label: 'Hot Five List',
                labelWidth: '85%'
            },
            {
                xtype: 'selectfield',
                id: 'NoticeSlot',
                // style: 'border-bottom:1px solid;',
                cls: 'default-label-class default-botom-border',
                label: 'Slot',
                labelWidth: '50%',
                 defaultPhonePickerConfig:{
                            doneButton: {
                                ui:'plain'
                            },
                            cancelButton: {
                                ui: 'plain'
                            }
                        },
                placeHolder: '',
                options: [
                    {
                        value: '',
                        text: '--Select a Slot--'
                    },
                    {
                        value: '1',
                        text: '1'
                    },
                    {
                        value: '2',
                        text: '2'
                    },
                    {
                        value: '3',
                        text: '3'
                    },
                    {
                        value: '4',
                        text: '4'
                    },
                    {
                        value: '5',
                        text: '5'
                    }
                ]
            },
            {
                xtype: 'numberfield',
                cls: 'default-label-class default-botom-border',
                id: 'EventPhone',
                // padding: '0 0 0 0',
                // style: 'border-bottom:1px solid #cfcfcf;',
                component: {
                    type: 'number'
                },
                clearIcon: false,
                label: 'Phone',
                labelWidth: '35%'
                // ,
                // listeners: {
                //     focus: function(comp, e, eopts) {
                //         var ost = comp.element.dom.offsetTop;
                //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                //     }
                // }
            },
            {
                xtype: 'emailfield',
                cls: 'default-label-class default-botom-border',
                id: 'EventEmail',
                // padding: '0 0 0 0',
                // style: 'border-bottom:1px solid #cfcfcf;',
                clearIcon: false,
                label: 'Email',
                labelWidth: '35%'
                // ,
                // listeners: {
                //     focus: function(comp, e, eopts) {
                //         var ost = comp.element.dom.offsetTop;
                //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                //     }
                // }
            },
            {
                xtype: 'textfield',
                // cls: 'default-label-class',
                id: 'EventWebsite',
                cls : 'default-label-class default-botom-border',
                // padding: '0 0 0 0',
                // style: 'border-bottom:1px solid #cfcfcf;',
                clearIcon: false,
                label: 'Website',
                labelWidth: '35%'
                // ,
                // listeners: {
                //     focus: function(comp, e, eopts) {
                //         var ost = comp.element.dom.offsetTop;
                //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                //     }
                // }
            },
            {
                xtype: 'togglefield',
                id: 'EventComments',
                // padding: 5,
                cls: 'default-label-class default-botom-border default-toggle-field-cls',
                // style: 'border-bottom:1px solid #cfcfcf;',
                label: 'Comments',
                labelWidth: '85%'
            },
            {
                xtype: 'textareafield',
                id: 'EventDescription',
                height:90,
                // padding: '0 0 0 0',
                
                clearIcon: false,
                cls: 'default-label-class default-botom-border',
                label: 'Info',
                labelWidth: '50px'
                // ,
                // listeners: {
                //     focus: function(comp, e, eopts) {
                //         var ost = comp.element.dom.offsetTop;
                //         Ext.getCmp('AddEvent').getScrollable().getScroller().scrollTo(0, ost);
                //     }
                // }
            },
            {
                xtype: 'toolbar',
                docked: 'top',
                id: 'NoticeTitleToolbar',
                title: 'Add Notice',
                items: [
                    {
                        xtype: 'button',
                        html: 'Back',
                        itemId: 'Back',
                        name : 'back',
                        ui: 'plain',
                        iconCls: 'previousArrowIcon'
                    },
                    {
                        xtype: 'spacer'
                    },
                    {
                        xtype: 'button',
                        height: 50,
                        itemId: 'EventSubmit',
                        margin: '0 10 0 0',
                        style: 'background-color:#32AFE7;color:White;',
                        ui: 'plain',
                        text: 'Submit'
                    }
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                id: 'NoticeTitleToolbar1',
                items: [
                    {
                        xtype: 'button',
                        height: 50,
                        itemId: 'EventSubmit',
                        style: 'background-color:#32AFE7;color:White;',
                        ui: 'plain',
                        width: '100%',
                        text: 'Submit'
                    }
                ]
            }
        ]
        ,
         listeners: [
            {
                fn: 'init',
                event: 'painted'
                // delegate: '#EventImageOnEventPage'
            }
            ]
    },
    init: function(){
            console.log('text working');
            var me = this;
            var locationInput = document.getElementById('locationField');
         
            //Create new autocomplete object
            locationComplete = new google.maps.places.Autocomplete(locationInput);
         
            //Bias to users current location
            this.geolocate();
            var place;
         
            google.maps.event.addListener(locationComplete, 'place_changed', function() {
                place = locationComplete.getPlace();
                console.log(place); //address
                noticeLocationLat = place.geometry.location.lat();
                noticeLocationLong = place.geometry.location.lng();
                // console.log(place.formatted_address); //address
                // console.log(place.geometry.location.lat()); //latitude
                // console.log(place.geometry.location.lng()); //longitude
            });
        },
        geolocate: function() {
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
              var geolocation = new google.maps.LatLng(
                  position.coords.latitude, position.coords.longitude);
         
              locationComplete.setBounds(new google.maps.LatLngBounds(geolocation,
                  geolocation));
            });
          }
        }

});
/*
 * File: app/view/EventAudioPlayer.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DNB.view.EventAudioPlayer', {
    extend: 'Ext.Container',
    alias: 'widget.eventaudioplayer',

    requires: [
        'Ext.Toolbar',
        'Ext.Button',
        'Ext.Spacer',
        'Ext.Panel',
        'Ext.field.Slider',
        'DNB.view.ExtJsLoader'
    ],

    config: {
        itemId: 'EventAudioPlayer',
        layout: 'fit',
        items: [
            {
                xtype: 'toolbar',
                docked: 'top',
                title: 'Audio Player',
                items: [
                    {
                        xtype: 'button',
                        html: 'Back',
                        itemId: 'Back',
                        ui: 'plain',
                        iconCls: 'previousArrowIcon'
                    },
                    {
                        xtype: 'spacer'
                    }
                ]
            },
            {
                xtype: 'panel',
                height: 50,
                hidden: true,
                id: 'AudioPlayerPanel'
            },
            {
                xtype: 'panel',
                cls: 'audioplayer',
                height: 600,
                id: 'MediaPlayerPanel',
                margin: '0 0 0 0',
                style: 'background-image:url(resources/css/img/sample.jpg);  background-repeat: no-repeat;background-size: 100% 100%;',
                layout: 'vbox',
                items: [
                    {
                        xtype: 'spacer'
                    },
                    {
                        xtype: 'panel',
                        height: 88,
                        layout: 'hbox',
                        items: [
                            {
                                xtype: 'button',
                                cls: 'playbutton',
                                height: 85,
                                id: 'MediaPlayButton',
                                ui: 'action',
                                width: 85,
                                iconCls: 'loading'
                            },
                            {
                                xtype: 'sliderfield',
                                flex: 1,
                                height: 85,
                                id: 'MediaAudioSlider',
                                itemId: 'mysliderfield1',
                                margin: '0 0 0 5',
                                style: 'opacity:5;'
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onBackTap',
                event: 'tap',
                delegate: '#Back'
            },
            {
                fn: 'onMediaPlayButtonTap',
                event: 'tap',
                delegate: '#MediaPlayButton'
            },
            {
                fn: 'onMediaAudioSliderChange',
                event: 'change',
                delegate: '#MediaAudioSlider'
            },
            {
                fn: 'onMediaAudioSliderDragEnd',
                event: 'dragend',
                delegate: '#MediaAudioSlider'
            }
        ]
    },

    onBackTap: function(button, e, eOpts) {
        DNB.app.getController('Events').StopAudioPlayer();
        if(audioPlayerOpenFrom=='Notice'){
            ShowHideHomePages('EventAudiosContainer');
        }
        else if(audioPlayerOpenFrom=='NoticeDetail'){
            ShowHideHomePages('EventDetailContainer');
        }
        else if(audioPlayerOpenFrom=='Albums'){
            Ext.getCmp('MainTabView').setActiveItem(2);
        }
        else if(audioPlayerOpenFrom=='Gallery'){
            Ext.getCmp('MainTabView').setActiveItem(2);
        }
        else if(audioPlayerOpenFrom=='GoLive'){
            Ext.getCmp('MainTabView').setActiveItem(3);
        }

    },

    onMediaPlayButtonTap: function(button, e, eOpts) {
        var MediaPlayButton=Ext.select('#MediaPlayButton').elements[0];

        if(media){
            console.log(MediaPlayButton.className);
            if(isAudioPlaying){
                DNB.app.getController('Events').StopAudioPlayer();
            }
            else{
                media.play();
                isAudioPlaying=true;
                isPaused=false;
                MediaPlayButton.className ='x-button x-iconalign-center x-button-action x-sized playbutton x-layout-box-item loading';
                clearInterval(mediaTimer);
                mediaTimer = setInterval(function () {
                    // get media position
                    media.getCurrentPosition(
                        // success callback
                        function (position) {
                            position=parseInt(position);
                            if (position > -1) {
                                isStarted=true;
                                console.log((position) + " sec");
                                Ext.getCmp('MediaAudioSlider').setValue(position);
                                if(duration==position){
                                    Ext.getCmp('MediaAudioSlider').setValue(1);
                                    media.stop();
                                    clearInterval(mediaTimer);
                                    isAudioPlaying=false;
                                    isStarted=false;
                                    MediaPlayButton.className ='x-button x-iconalign-center x-button-action x-sized playbutton x-layout-box-item play';
                                }
                            }
                            else if(isStarted && !isPaused){

                                Ext.getCmp('MediaAudioSlider').setValue(1);
                                media.stop();
                                clearInterval(mediaTimer);
                                isAudioPlaying=false;
                                isStarted=false;
                                MediaPlayButton.className ='x-button x-iconalign-center x-button-action x-sized playbutton x-layout-box-item play';
                            }
                        },
                        // error callback
                        function (e) {
                            //Ext.Viewport.setMasked(false);
                            console.log("Error getting pos=" + e);
                        }
                    );
                }, 1000);
            }
        }
    },

    onMediaAudioSliderChange: function(me, sl, thumb, newValue, oldValue, eOpts) {
        var position=newValue;
        if(position=='' || position==null)
            position=0;
        position *=1000;
        media.seekTo(position);
    },

    onMediaAudioSliderDragEnd: function(sliderfield, sl, thumb, value, e, eOpts) {
        var position=sliderfield.getValue()[0];
        if(position=='' || position==null)
            position=0;
        position *=1000;
        media.seekTo(position);
    }

});
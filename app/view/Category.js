/*
 * File: app/view/Category.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DNB.view.Category', {
    extend: 'Ext.Container',
    alias: 'widget.category',

    requires: [
        'Ext.Panel',
        'Ext.Spacer',
        'Ext.Img',
        'Ext.Label',
        'Ext.dataview.DataView',
        'Ext.XTemplate'
    ],

    config: {
        height: '100%',
        id: 'Category',
        top: -4,
        width: '80%',
        style:'background-color: rgba(54, 174, 228, 0.960784);',
        hideOnMaskTap: true,
        modal: true,
        items: [
            {
                xtype: 'panel',
                id: 'CategoryUserProfilePanel',
                // style: 'background-color:rgba(54, 174, 228, 0.96);color:White;',
                style: 'color:White;',
                items: [
                    {
                        xtype: 'spacer',
                        height: 25
                    },
                    {
                        xtype: 'image',
                        cls: 'circleImage',
                        height: '120px',
                        src: 'resources/images/default-user.png',
                        id: 'UserProfileImageOnCategory',
                        margin: '0 auto',
                        style: '    height: 120px !important;     margin: 0px auto !important;     border-radius: 100%;     border: solid 2px #fff;     width: 120px;     box-shadow: 0px 0px 0px 6px #34ace1 inset;'
                    },
                    {
                        xtype: 'label',
                        height: '',
                        html: 'User Name',
                        id: 'UserNameOnCategory',
                        padding: '10px 0 0 0 ',
                        style: 'text-align:center;font-size:16px;'
                    },
                    {
                        xtype: 'image',
                        src: 'resources/images/more-h.png',
                        height: 40,
                        width: 40,
                        style:'background-size:contain;margin:auto;'
                    },
                    {
                        xtype: 'label',
                        html: '<b> I speak with my ming. I never mind what i speak </b>',
                        id: 'UserMessageOnCategory',
                        // padding: '10px 0 0 0',
                        style: 'text-align:center;font-size:12px;'
                    },
                    {
                        xtype: 'label',
                        html: 'Select Categories',
                        // margin: 5,
                        // padding: '10px'
                        style: 'font-size: 18px;font-weight: lighter;',
                        margin: '10 0 0 5',
                        padding: '10 0 0 10'
                    }
                ]
            },
            {
                xtype: 'dataview',
                // height: 317,
                itemId: 'CategoryList',
                // style: 'background-color:rgba(54, 174, 228, 0.96); color:white;height: inherit;',
                style: ' color:white;height: 50%;',
                itemTpl: Ext.create('Ext.XTemplate', 
                    '<table width="100%" height="40px" ><tr>',
                    '    <td style="width:10%;padding-left:15px;padding-top:5px;">',
                    '    <tpl if="isSelected ==\'yes\'">',
                    '',
                    '    </tpl>',
                    '    </td>',
                    '    <td  class="sidemenutext">',
                    '        <img width="17px" height="17px" src="{[this.GetImage(values.isSelected)]}" /> <span class="category-font-span">{title}</span> ',
                    '    </td></tr></table>',
                    '   ',
                    {
                        GetImage: function(isSelected) {
                            //alert('123');
                            if(isSelected=='yes'){
                                return 'resources/images/categoryselected.png';
                            }
                            else{
                                return 'resources/images/categoryNotSelected.PNG';
                            }
                        }
                    }
                ),
                store: 'EventCategoryStore'
            },
            {
                xtype: 'label',
                hidden: true,
                html: 'Select Promotion Categories',
                style: 'background-color:#33A3D3;color:White;'
            },
            {
                xtype: 'dataview',
                height: '30%',
                hidden: true,
                itemId: 'CategoryList1',
                style: 'background-color:#36AEE4;color:white;',
                itemTpl: Ext.create('Ext.XTemplate', 
                    '<table width="100%" height="40px" ><tr>',
                    '    <td style="width:17%;padding-left:15px;padding-top:5px;">',
                    '    <tpl if="isSelected ==\'yes\'">',
                    '        <img width="20px" height="20px" src="resources/images/tick_mark.png" />',
                    '    </tpl>',
                    '    </td><td style="text-align:left;">',
                    '    {title}',
                    '    </td></tr></table>',
                    {
                        GetImage: function(isSelected) {
                            if(isSelected=='yes'){
                                return 'resources/images/tick_mark.png';
                            }
                            else{
                                return '';// 'resources/images/categoryNotSelected.PNG';
                            }
                        }
                    }
                ),
                store: 'PromotionsCategoryStore'
            }
        ],
        listeners: [
            {
                fn: 'onCategoryListItemTap',
                event: 'itemtap',
                delegate: '#CategoryList'
            },
            {
                fn: 'onCategoryListItemTap1',
                event: 'itemtap',
                delegate: '#CategoryList1'
            }
        ]
    },

    onCategoryListItemTap: function(dataview, index, target, record, e, eOpts) {
        //console.log(e);
        //console.log(e.target);
        //console.log(categoryListData.length);
        catSelectedList=[];
        if(categoryListData.length>0){
            for(var i=0;i<categoryListData.length;i++){
                if(categoryListData[i].id==record.data.id){
                    if(categoryListData[i].isSelected=='yes')
                        categoryListData[i].isSelected='no';
                    else
                        categoryListData[i].isSelected='yes';
                }
                if(categoryListData[i].isSelected=='yes')
                    catSelectedList.push(categoryListData[i].id);
            }
            userSelectedCategories = catSelectedList;
            localStorage.setItem('userSelectedCategories',JSON.stringify(userSelectedCategories));
            Ext.getStore('EventCategoryStore').setData(categoryListData);
        }
        //Now apply category filter on other event list in home page
        //EventsData[i].Notice.categoryIds
        DNB.app.getController('Events').SearchNoticesByCategoryandDate('category');
        /////////////////////////////////////////////////////////////////////////////////////
        /*var promotionTempData=[];
        //Apply Category filter on Promotion
        // data[i].Promotion.promotionCategory=promotionCategory;
        //                    promotionsData.push(data[i].Promotion);
        for(var k=0;k<promotionsAllData.length;k++){
            for(var j=0;j<catSelectedList.length;j++){
                if(promotionsAllData[k].Promotion.promotionCategory.indexOf(':'+catSelectedList[j]+':')>=0){
                    promotionTempData.push(promotionsAllData[k].Promotion);
                    break;

                }
            }
        }
        promotionsData=[];
        promotionsData=promotionTempData;
        */
    },

    onCategoryListItemTap1: function(dataview, index, target, record, e, eOpts) {
        //console.log(e);
        //console.log(e.target);
        console.log(promotionsCategoryListData.length);
        promotionCategorySelectedList=[];
        if(promotionsCategoryListData.length>0){
            for(var i=0;i<promotionsCategoryListData.length;i++){
                if(promotionsCategoryListData[i].id==record.data.id){
                    if(promotionsCategoryListData[i].isSelected=='yes')
                        promotionsCategoryListData[i].isSelected='no';
                    else
                        promotionsCategoryListData[i].isSelected='yes';
                }
                if(promotionsCategoryListData[i].isSelected=='yes')
                    promotionCategorySelectedList.push(promotionsCategoryListData[i].id);
            }
            console.log(promotionCategorySelectedList);
            Ext.getStore('PromotionsCategoryStore').setData(promotionsCategoryListData);
        }


    }

});
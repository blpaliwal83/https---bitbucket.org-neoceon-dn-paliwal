/*
 * File: app/view/EventComment.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DNB.view.EventComment', {
    extend: 'Ext.Container',
    alias: 'widget.eventcomment',

    requires: [
        'Ext.Panel',
        'Ext.dataview.DataView',
        'Ext.XTemplate',
        'Ext.Toolbar',
        'Ext.Button',
        'Ext.Spacer',
        'Ext.field.Text'
    ],

    config: {
        id: 'EventComment',
        items: [
            {
                xtype: 'panel',
                height: '100%',
                layout: 'fit',
                items: [
                    {
                        xtype: 'dataview',
                        itemId: 'mydataview7',
                        style: 'background-color:white;',
                        itemTpl: Ext.create('Ext.XTemplate', 


                            '<table style="width:100%"><tr style="vertical-align: top;"><td class="coments-img-wrapper-td" >',
                            '    <img class=\"comments-user-img-icon-cls\" width=\"40px\" height=\"40px\" src=\"{[this.GetImageUrl(values.user_img)]}\" onerror=DNB.app.getController(\"Events\").GetUserImageUrl(this) ></td>',
                            '    <td class="default-botom-border" style="padding: 10px 10px 0px 0px;width:80%;">',
                            '        <table style="width:100%">',
                            '            <tr><td colspan="2" class="comment-user-name-td" >{user_name}',
                            '                <span class="comment-number-span" >&nbsp;{totalComment}&nbsp;</span>',
                            '                </td></tr>',
                            '            <tr><td colspan="2" style="white-space: normal;"><div class="comment-mesage-div">{message}</div></td></tr>',
                            '            <tr><td style="width:90%;">',
                            '                <div style="float:left;">',
                            '                    <div style="float:left;">',
                            '                        <img style="height:15px;width:15px;margin-bottom:3px;" src="resources/images/clock2.png">',
                            '                    </div>',
                            '                    <div class="comment-time-class" >{[this.GetTimeDifference(values.all_differences)]}</div>',
                            '                </div>',
                            '                </td>',
                            '                <td style="width:10%;"><img style="width:22px;height:22px;margin-bottom:7px;" src="resources/images/flag1.png" /></td></tr>',
                            '        </table>',
                            '    </td>',
                            '    </tr></table>',
                            {
                                GetImageUrl: function(imageUrl) {
                                    if(imageUrl=='' || imageUrl== null){
                                        return 'resources/images/default-user.png';
                                    }
                                    return imageBaseUrl+imageUrl;
                                },
                                GetTimeDifference: function(dt) {
                                    //return 'TIME'+dt.d;
                                    //console.log(dt);
                                    if(dt.y>0){
                                        return dt.y+' year ago';
                                    }
                                    else if(dt.m>0){
                                        return dt.m+' month ago';
                                    }
                                    else if(dt.d>0){
                                        return dt.d+' days ago';
                                    }
                                    else if(dt.h>0){
                                        return dt.h+' hours ago';
                                    }
                                    else if(dt.i>0){
                                        return dt.i+' minutes ago';
                                    }
                                    else
                                    return 'just now';
                                }
                            }
                        ),
                        store: 'NoticeCommentStore'
                    }
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'top',
                title: 'Notice Comments',
                items: [
                    {
                        xtype: 'button',
                        height: 35,
                        html: 'Back',
                        itemId: 'Back',
                        ui: 'plain',
                        width: 72,
                        iconCls: 'previousArrowIcon'
                    },
                    {
                        xtype: 'spacer'
                    }
                ]
            },
            {
                xtype: 'panel',
                docked: 'bottom',
                padding: 10,
                style: 'background-color:#32AFE7;',
                layout: 'hbox',
                items: [
                    {
                        xtype: 'textfield',
                        flex: 1,
                        id: 'EventCommentText',
                        clearIcon: false,
                        placeHolder: 'Comments'
                    },
                    {
                        xtype: 'button',
                        height: 40,
                        id: 'SendComment',
                        itemId: 'SendComment',
                        margin: '3 0 0 8',
                        style: 'background-color:white;color:gray;',
                        ui: 'plain',
                        text: 'Send'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onMydataview7ItemTap',
                event: 'itemtap',
                delegate: '#mydataview7'
            },
            {
                fn: 'onBackTap',
                event: 'tap',
                delegate: '#Back'
            },
            {
                fn: 'onSendCommentTap',
                event: 'tap',
                delegate: '#SendComment'
            }
        ]
    },

    onMydataview7ItemTap: function(dataview, index, target, record, e, eOpts) {
        //console.log(e.target.nodeName);
        // debugger
        if(e.target.nodeName=='IMG'){
            console.log(e.target.parentNode.innerHTML);
            console.log(record.data.user_img);
            if(e.target.parentNode.innerHTML.indexOf('flag')>=0){
                console.log('click on flage');
                Ext.Ajax.request({
                    url:DNB.util.Common.api.addCommentFlag,
                    method:'POST',
                    params:{
                        comment_id:record.data.id,
                        user_id:localStorage.getItem('userid')
                    },
                    success: function(res){
                        //alert(res.responseText);
                        var res=Ext.decode(res.responseText).NoticeFlag;
                        // alert('',res.mgs);
                        // Ext.Msg.alert('',res.mgs);
                        DNB.app.getController('Events').GetEventCommentList(commentEventId);
                    },failure:function(res){
                        Ext.Msg.alert('','Internet is not available.');
                    }
                });
            }
            else if((e.target.parentNode.innerHTML.indexOf(record.data.user_img)>=0)||(e.target.parentNode.innerHTML.indexOf('default-user')>=0)){
                console.log('click on user image');
                console.log(record);
                if(Ext.getCmp('UserProfile'))
                    Ext.getCmp('UserProfile').show();
                else
                    Ext.Viewport.add({xtype:'userprofile'}).show();
                if(e.target.parentNode.innerHTML.indexOf('default-user')>=0){
                    record.data.user_img = '';
                }
                
                DNB.app.getController('UserProfile').setData(record.data);

                // Ext.getCmp('UserProfile').setData({username:record.data.user_name,userimage:record.data.user_img});
            }
        }
    },

    onBackTap: function(button, e, eOpts) {
                Ext.getCmp('EventComment').hide();
                Ext.getCmp('DNBView').show();
                //Ext.getCmp('EventList').show();
                if(commentPageOpenFrom=='EventDetail')
                    fnShowEventDetailPageFromHome({id:commentEventId});
                Ext.Viewport.setMasked({xtype:'loadmask',message:'Loading GoLive data...'});
                DNB.app.getController('Events').GetNotices();
    },

    onSendCommentTap: function(button, e, eOpts) {

        if(selectedEventDetail.Notice.comment!='yes'){
            Ext.Msg.alert('','Comments are turned off for this notice.');
            return;
        }
        var msg=Ext.getCmp('EventCommentText').getValue();
        if(msg==''){
            // alert('','Notice comment is mandatory');
            Ext.Msg.alert('','Notice comment is mandatory.');
            return;
        }
        else{
            Ext.Viewport.setMasked({xtype:'loadmask',message:'Saving comment...'});
            //console.log(commentEventId);
            // http://www.wdyl.com/profanity?q=xxx
            /*Ext.Ajax.request({
                url:'http://www.wdyl.com/profanity',
                //method:'POST',
                params:{
                    q:msg
                },
                success: function(res){
                    alert(res.responseText);
                    var res=Ext.decode(res.responseText);
                    alert(res.response);

                    Ext.Viewport.setMasked(false);
                },failure:function(res){
                    Ext.Viewport.setMasked(false);
                    Ext.Msg.alert('','Internet is not available.');
                }
            });*/
            Ext.Ajax.request({
                url:DNB.util.Common.api.addComment,
                method:'POST',
                params:{
                    notice_id:commentEventId,
                    user_id:localStorage.getItem('userid'),
                    message:msg
                },
                success: function(res){
                    Ext.Viewport.setMasked(false);
                    var res=Ext.decode(res.responseText);
                    // alert('',res.Comment.mgs);
                    // Ext.Msg.alert('',res.Comment.mgs);
                    Ext.getCmp('EventCommentText').setValue('');
                    DNB.app.getController('Events').GetEventCommentList(commentEventId);

                },failure:function(res){
                    Ext.Viewport.setMasked(false);
                    Ext.Msg.alert('','Internet is not available.');
                }
            });
        }
    }

});
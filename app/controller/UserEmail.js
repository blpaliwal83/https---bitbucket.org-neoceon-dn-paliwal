/*
 * File: app/controller/UserEmail.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DNB.controller.UserEmail', {
    extend: 'Ext.app.Controller',

    config: {
        views: [
            'UserEmail'
        ],

        control: {
            "button[itemId=SaveEmailAddress]": {
                tap: 'onSaveEmailAddressButtonTap'
            },
            "button[itemId=Close]": {
                tap: 'onCloseButtonTap'
            }
        }
    },

    onSaveEmailAddressButtonTap: function(button, e, eOpts) {
        var email=Ext.getCmp('UserEmailAddress').getValue();

        var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        var checkemail=filter.test(email);

        if(email==''){
            Ext.Msg.alert('','Email is mandatory!');
        }
        else if(!checkemail){
            Ext.Msg.alert('','Invalid Email!');
        }
        else{
            Ext.Ajax.request({
                url:DNB.util.Common.api.addTwitterEmail,
                method:'POST',
                params :  {
                    email:email,user_id:twitteruserid
                },
                success:function(res,options){

                    Ext.getCmp('UserEmail').hide();
                    var res=Ext.decode(res.responseText).Result;
                    isLogin=false;
                    localStorage.setItem('email',email);
                    if(res.status){

                        isLogin = true;
                        isLoginWithFB = false;
                        isLoginWithTwitter = true;
                        isLocationServiceToggleButtonSet = false;
                        localStorage.setItem('isLoginWithFB', 'NO');
                        localStorage.setItem('isLoginWithTwitter', 'YES');

                        localStorage.setItem('userid', twitteruserid);
                        localStorage.setItem('isLogin', 'YES');
                        localStorage.setItem('username', userName);

                        Ext.getCmp('Login').hide();
                        termconditionsPageOpenFrom = 'Register';
                        if (Ext.getCmp('TMShow')) Ext.getCmp('TMShow').show();
                        else Ext.Viewport.add({
                            xtype: 'tmshow'
                        }).show();
                        Ext.getCmp('BackButtonInTermsCondition').setHidden(true); 
                    }
                    else if(res.status==false){
                        Ext.Msg.alert('','Email is already exist. Please try again.');
                    }
                    else{
                        Ext.Msg.alert('',res.message);
                        Ext.getCmp('UserEmail').hide();
                        Ext.getCmp('Login').hide();
                        Ext.getCmp('MainTabView').setActiveItem(0);
                        Ext.getCmp('DNBView').show();
                    }
                },
                failure:function(res,options){
                    Ext.Msg.alert('','failure'+res.responseText);
                }
            });
        }
    },

    onCloseButtonTap: function(button, e, eOpts) {
        Ext.getCmp('ReSendEmail').setValue('');
        Ext.getCmp('UserEmail').hide();
    }

});
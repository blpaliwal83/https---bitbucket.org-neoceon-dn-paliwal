/*
 * File: app/controller/Settings.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DNB.controller.Settings', {
    extend: 'Ext.app.Controller',

    config: {
        views: [
            'Settings'
        ],
        refs:{
            location:'panel[name=userLocation]'
        },
        control: {
            location : {
                initialize : 'onInitializeLocationLabel'
            },
            "button[itemId=Logout]": {
                tap: 'onLogoutButtonTap'
            },
            "button[itemId=About]": {
                tap: 'onAboutButtonTab'
            },
            "button[itemId=TermsConditions]": {
                tap: 'onTermsConditionsButtonTap'
            },
            "button[itemId=HelpFeedback]": {
                tap: 'onHelpFeedbackButtonTap'
            },
            "button[itemId=NotificationCategoryButton]": {
                tap: 'onNotificationCategoryButtonTap'
            },
            "button[itemId=AccountButton]": {
                tap: 'onAccountButtonTap'
            }
        }
    },
    onInitializeLocationLabel : function(label){
        // console.log('label')
        var context=this;
        label.element.on('tap', function(e, el){
            if(localStorage.getItem('locationlocked')=='yes')
                return;
        if(!Ext.getCmp('locationView'))
             Ext.Viewport.add({xtype:'location'}).show();
        Ext.getCmp('locationView').show(); 
        Ext.getCmp('DNBView').hide();

    });
    },
    getSlideRightTransition:function(){
        return{
            type:'slide',
            direction:'right'
        };
    },
    
    onLogoutButtonTap: function(button, e, eOpts) {
        isLogin=false;
        isLoginWithFB=false;
        isLoginWithTwitter=false;
        localStorage.setItem('isLogin','');
        localStorage.setItem('isLoginWithFB','NO');
        localStorage.setItem('isLoginWithTwitter','NO');

        localStorage.setItem('userid','');
        localStorage.setItem('First_name','');
        localStorage.setItem('Last_name','');
        localStorage.setItem('username','');
        localStorage.setItem('email','');
        localStorage.setItem('image','');
        localStorage.setItem('radius',0);
        localStorage.setItem('usermessage','');

        localStorage.setItem('locationlocked','no');
        localStorage.setItem('latitude','0.00');
        localStorage.setItem('longitude','0.00');
        localStorage.setItem('currentAddress','');
        localStorage.setItem('notification','no');

        isAlreadyLikedNotice=false;
        isAlreadyAttendNotice=false;
        isAlreadyFavoriteNotice=false;
        Ext.Msg.alert('','Logout successfully.');
        DNB.app.getController('Login').ReSetLoginView();
        Ext.getCmp('MainTabView').setActiveItem(0);
        ShowHideHomePages('HomeContainer');
    },

    onAboutButtonTab: function(button, e, eOpts) {
        console.log('called about');
        Ext.getCmp('Settings').hide();
        if(Ext.getCmp('About'))
            Ext.getCmp('About').show();
        else
            Ext.Viewport.add({xtype:'about'}).show();
    },

    onTermsConditionsButtonTap: function(button, e, eOpts) {
                Ext.getCmp('Settings').hide();
                if(Ext.getCmp('TermsConditions'))
                    Ext.getCmp('TermsConditions').show();
                else
                    Ext.Viewport.add({xtype:'termsconditions'}).show();
                Ext.getCmp('BackButtonInTermsCondition').setHidden(false);
                termconditionsPageOpenFrom='Settings';
    },

    onHelpFeedbackButtonTap: function(button, e, eOpts) {
        if(Ext.getCmp('Feedback'))
                    Ext.getCmp('Feedback').show();
                else
                    Ext.Viewport.add({xtype:'feedback'}).show();
                Ext.getCmp('NameInFeedBack').setValue('');
                Ext.getCmp('EmailInFeedBack').setValue('');
                Ext.getCmp('DescriptionInFeedBack').setValue('');
    },

    onNotificationCategoryButtonTap: function(button, e, eOpts) {
        if(Ext.getCmp('NotificationCategoryMultiSelect'))
            Ext.getCmp('NotificationCategoryMultiSelect').show();
        else
            Ext.Viewport.add({xtype:'notificationcategorymultiselect'}).show();

        //console.log('NotificationCategory');
        var tempC=Ext.decode(localStorage.getItem('notificationCategory')),cat='';
        if(tempC.length>0){

            for(var i=0;i<tempC.length;i++){
                cat +=',:'+tempC[i].category_id+':';
            }
            if(NotificationCategory.length>0){
                for(var j=0;j<NotificationCategory.length;j++){
                    if(cat.indexOf(':'+NotificationCategory[j].id+':')>=0){
                        NotificationCategory[j].isSelected='yes';
                    }
                }
            }
        }
        //console.log(NotificationCategory);
        Ext.getStore('NotificationCategoryMultiSelectStore').setData(NotificationCategory);
    },

    onAccountButtonTap: function(button, e, eOpts) {
        Ext.getCmp('Settings').hide();
        if(Ext.getCmp('Account'))
            Ext.getCmp('Account').show();
        else
            Ext.Viewport.add({xtype:'account'}).show();
        Ext.getCmp('UserProfileImage').setSrc('resources/images/default-user.png');
        if(localStorage.getItem('image')!=null && localStorage.getItem('image')!=''){
            Ext.Viewport.setMasked({xtype:'loadmask',message:'Loading..'});
            Ext.getCmp('UserProfileImage').setSrc(imageBaseUrl+localStorage.getItem('image'));
        }
        console.log(localStorage.getItem('image'));
        Ext.getCmp('UserName').setValue(localStorage.getItem('username'));
        Ext.getCmp('UserNamePanel').hide();
        Ext.getCmp('UserNameLabel').setHtml(localStorage.getItem('username'));
        Ext.getCmp('UserNameLabelPanel').show();

        Ext.getCmp('UserMessage').setValue(localStorage.getItem('usermessage'));
        Ext.getCmp('UserMessagePanel').hide();
        Ext.getCmp('UserMessageLabel').setHtml(localStorage.getItem('usermessage'));
        if(localStorage.getItem('usermessage')!=null)
        {
             Ext.getCmp('UserMessageLength').setHtml(150 - parseInt(localStorage.getItem('usermessage').length));
        }
       

        Ext.getCmp('UserMessageLabelPanel').show();
        if(isLoginWithFB || isLoginWithTwitter){
            Ext.getCmp('ChangeEmailAddress').hide();
            Ext.getCmp('ChangePasswordButton').hide();
        }else{
            Ext.getCmp('ChangeEmailAddress').show();
            Ext.getCmp('ChangePasswordButton').show();
        }
    },

    SaveUserLocation: function(latitude, longitude, address, LocationService) {
        Ext.Ajax.request({
            url:DNB.util.Common.api.saveUserLocation,
            method:'POST',
            params :  {
                location:LocationService,uid:localStorage.getItem('userid'),
                latitude:latitude,longitude:longitude,address:address
            },
            success:function(res,options){
                Ext.Viewport.setMasked(false);
                DNB.app.getController('Events').GetNotices();
                DNB.app.getController('Events').GetHotFiveNotices();
                DNB.app.getController('Events').GetPromotions();            
            },
            failure:function(res,options){
                Ext.Viewport.setMasked(false);
                Ext.Msg.alert('','Internet is not available.');
            }
        });
    },

    FillSettingsInfo: function() {
        ShowHidePagesOnSettingsTab('Settings');
        categoryListData=categoryAllListData;
        categoryMultiSelectOpenFromPage='Settings';
        Ext.getCmp('PushNoificaions').setValue(localStorage.getItem('notification')=='yes'?1:0);
        // isLocationServiceToggleButtonSet=true;
        Ext.getCmp('LocationService').setValue(localStorage.getItem('locationlocked')=='yes'?1:0);
        Ext.getCmp('UserLocattion').setHtml(localStorage.getItem('currentAddress'));

        var radius=localStorage.getItem('radius');
        if(radius==null || radius=='null'){
            radius=0;
        }

        var html = '';
        if(radius<=1){
            html = radius+' mile';
        }else{
            html = radius+' miles';
        }

        Ext.getCmp('RadiusLabelValue').setHtml(html);
        // Ext.getCmp('RadiusLabelValue').setHtml(radius+' mile');

        Ext.getCmp('Radius').setValue(radius);
        //console.log(Ext.getCmp('Settings'));
        var totalComponents=Ext.getCmp('Settings').getItems().items.length;
        for(var i=0;i<totalComponents;i++){
            if(i==1 || i==6 || i==10 || i==9){
                Ext.getCmp('Settings').getItems().items[i].setHeight('20px');
            }
            else if(i!=14)
                Ext.getCmp('Settings').getItems().items[i].setHeight('45px');
        }


        // if(deviceOSName=='ios' && deviceName=='phone'){
        //     if(deviceHeight>600){
        //         Ext.getCmp('PushNoificaions').setLabelWidth('73%');
        //         Ext.getCmp('LocationService').setLabelWidth('73%');
        //     }
        //     else{
        //         Ext.getCmp('PushNoificaions').setLabelWidth('69%');
        //         Ext.getCmp('LocationService').setLabelWidth('69%');
        //     }
        // }

        var slidercolor=Ext.select('#slidercolor').elements[0];
        var iRadius=parseInt(radius);
        sliderControlInterval=  setInterval(function(){
            Ext.getCmp('Radius').setValue(iRadius);
            //i++;
            thumb=Ext.getCmp('Radius').getComponent().getThumb();
            //alert('1:'+thumb.translatableBehavior.translatable.x);
// debugger
            if(thumb.translatableBehavior.translatable.x>0){
                var width = thumb.translatableBehavior.translatable.x - 10;
                if(width<0){
                    width=0;
                }

                slidercolor.style.cssText=''.concat(
                    '-webkit-text-fill-color: blue;',
                    'fill: rgb(0, 255, 255);',
                    'width: '+width+'px !important;',
                    ' height: 5px !important;',
                    ' margin-left: 15px !important;',
                    ' margin-top: -33px !important;',
                    ' background-color: #32AFE7;');
                clearInterval(sliderControlInterval);
            }
            else{
                slidercolor.style.cssText=''.concat(
                    '-webkit-text-fill-color: RED;',
                    'fill: RED;',
                    'display:none;',
                    'width: 0px !important;',
                    ' height: 5px !important;',
                    ' margin-left: 16px !important;',
                    ' margin-top: -33px !important;',
                    ' background-color: RED;');
                if(iRadius<5)
                    clearInterval(sliderControlInterval);
            }

        },100);
        if(localStorage.getItem('userid')==undefined
           && localStorage.getItem('userid')==''){
            //setting will available only for logged uesr
            return;
        }
    }

});